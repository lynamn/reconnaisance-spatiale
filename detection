import numpy as np
import cv2
from PIL import Image
face_cascade = cv2.CascadeClassifier('face.xml')
face_recognizer = cv2.face.LBPHFaceRecognizer_create()
cap = cv2.VideoCapture(0)
def write_data():
    nb = 0
    while 1:
        ret, img = cap.read()
        only_face = np.array(10)
        gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
        faces = face_cascade.detectMultiScale(gray, 1.3, 5)
        for (x,y,w,h) in faces:
            cv2.rectangle(img,(x,y),(x+w,y+h),(255,0,0),2)
            only_face = gray[y:y+h,x:x+w]
            cv2.imwrite("data/user"+str(nb)+".jpg", only_face)
        nb = nb + 1
        cv2.imshow('live video',img)
        cv2.waitKey(1)
        if nb == 20:
            cap.release()
            cv2.destroyAllWindows()
            break   
#write_data()
def train_data():
    images = []
    labels =[]
    for i in range(19):
        image_pil=Image.open('data/user{}.jpg'.format(i+1)).convert('L')
        image = np.array(image_pil, 'uint8')
        faces = face_cascade.detectMultiScale(image)
        for (x, y, w, h) in faces:
            images.append(image[y: y + h, x: x + w])
            labels.append(1)
            cv2.imshow("Adding faces to traning set...", image[y: y + h, x: x + w])
            cv2.waitKey(10)
    face_recognizer.train(images, np.array(labels))
    face_recognizer.save('trainer/trainer.yml')
    cv2.destroyAllWindows()
train_data()
def recon_data():
    while True:
        ret, im =cap.read()
        gray=cv2.cvtColor(im,cv2.COLOR_BGR2GRAY)
        faces=face_cascade.detectMultiScale(gray, scaleFactor=1.2, minNeighbors=5, minSize=(100, 100), flags=cv2.CASCADE_SCALE_IMAGE)
        for(x, y, w, h) in faces:
             id_user, conf = face_recognizer.predict(gray[y:y+h,x:x+w])
             print(conf)
             cv2.rectangle(im,(x-10,y-10),(x+w+10,y+h+10), (225,255,255),2)
             if conf > 80:
                 name = "inkoun"
             else:
                 if id_user == 1:
                     name = 'lyna'
             cv2.putText(im,str(name),(x,y-15),cv2.FONT_HERSHEY_SCRIPT_COMPLEX, 2, 25)
             cv2.imshow('im',im)
             cv2.waitKey(10)
recon_data()             
             
             
             

